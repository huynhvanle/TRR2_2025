#include <iostream>
#include <math.h>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <cctype>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <cstring>
#include <fstream>
#include <deque>
#include <stack>
#include <queue>
#define MOD 1000000007
#define run() int t; cin >> t; while(t--)
#define fast() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll;
typedef double db;
typedef float fl;
int n, u;
int mtk[101][101];
int mts[101][101];
int x[101], check[101];
vector<vector<int>> ham;
int res = 1e9;
void find_ham(int i){
    for(int j = 1; j <= n; j++){
        if(mtk[i - 1][j]){
            if(i == n + 1 && j == x[1]){
                x[i] = j;
                int sum = 0;
                for(int a = 1; a <= n; a++)
                    sum += mts[x[a]][x[a + 1]];
                vector<int> kq;
                for(int a = 1; a <= n + 1; a++)
                    kq.push_back(x[a]);
                if(sum < res){
                    res = sum;
                    ham.push_back(kq);
                }
            }
            if(!check[j]){
                x[i] = j;
                check[j] = 1;
                find_ham(i + 1);
                check[j] = 0;
            }
        }
    }
}
int main() {
    cin >> n >> u;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cin >> mts[i][j];
            if(mts[i][j] != 0 && mts[i][j] != 10000)
                mtk[i][j] = 1;
        }
    }
    x[1] = u;
    check[u] = 1;
    find_ham(2);
    if(ham.empty()) cout << 0;
    else{
        cout << res << endl;
        for(int a : ham[ham.size() - 1])
            cout << a << " ";
        cout << endl;
    }
    return 0;
}
