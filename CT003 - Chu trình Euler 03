#include <bits/stdc++.h>
#define all(x) x.begin(), x.end()

int ch[105][105];
int vh[105][105];
int dk, n, u;
int check[105];
vector<int> CE;

void dfs(){
    stack<int> a;
    a.push(1);
    check[1] = 1;
    while(!a.empty()){
        int s = a.top();
        a.pop();
        for(int i = 1; i <= n; i++){
            if(!check[i] && vh[s][i]){
                check[i] = 1;
                a.push(s);
                a.push(i);
                break;
            }
        }
    }
}
void find_el(){
    stack<int> a;
    a.push(u);
    while(!a.empty()){
        int s = a.top();
        int dg = 0;
        for(int i = 1; i <= n; i++){
            if(ch[s][i]){
                a.push(i);
                ch[s][i] = 0;
                dg = 1;
                break;
            }
        }
        if(!dg){
            CE.push_back(s);
            a.pop();
        }
    }
    for(auto it = CE.rbegin(); it != CE.rend(); ++it)
        cout << *it << " ";
}
bool check_lien_thong(){
    dfs();
    for(int i = 1; i <= n; i++)
        if(!check[i])
            return 0;
    return 1;
}
void check_el(){
    int dg = 0;
    if(check_lien_thong()){
        dg = 1;
        int a = 0, b = 0, res = 0;
        for(int i = 1; i <= n; i++){
            int ra = 0, vao = 0;;
            for(int j = 1; j <= n; j++){
              ra += ch[i][j];
              vao += ch[j][i];
            }
            int x = ra - vao;
            if(x == 1) a++;
            else if(x == -1) b++;
            else if(x == 0) res++;
        }
        if(res == n) dg = 1;
        else if(a == 1 && b == 1) dg = 2;
        else dg = 0;
    }
    cout << dg;
}
int main(){
    cin >> dk >> n;
    if(dk == 2){
        cin >> u;
    }
    for(int i = 1; i <= n; i++){
        int k; cin >> k;
        for(int x = 0; x < k; x++){
            int j; cin >> j;
            ch[i][j] = 1;
            vh[i][j] = 1;
            vh[j][i] = 1;
        }
    }
    
    if(dk == 1) check_el();
    else if(dk == 2) find_el();
}
